basePath: /
definitions:
  auth.loginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.loginSerializer:
    properties:
      token:
        type: string
      userid:
        type: string
    type: object
  auth.signupInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 5
        type: string
    required:
    - email
    - name
    - password
    type: object
  auth.userSerializer:
    properties:
      message:
        type: string
      userid:
        type: string
    type: object
  feed.Post:
    properties:
      _id:
        type: string
      content:
        type: string
      createdAt:
        type: string
      creator:
        type: string
      imageUrl:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  feed.allPostSerializer:
    properties:
      message:
        type: string
      posts:
        items:
          $ref: '#/definitions/feed.Post'
        type: array
      totalItems:
        type: integer
    type: object
  feed.creator:
    properties:
      _id:
        type: string
      name:
        type: string
    type: object
  feed.postSerializer:
    properties:
      creator:
        $ref: '#/definitions/feed.creator'
      message:
        type: string
      post:
        $ref: '#/definitions/feed.Post'
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is the documentation for social sum api
  title: Social sum API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: login Params
        in: body
        name: loginInput
        required: true
        schema:
          $ref: '#/definitions/auth.loginInput'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully logged in user
          schema:
            $ref: '#/definitions/auth.loginSerializer'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: login user
      tags:
      - Auth
  /auth/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Sign up Params
        in: body
        name: signupInput
        required: true
        schema:
          $ref: '#/definitions/auth.signupInput'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created user
          schema:
            $ref: '#/definitions/auth.userSerializer'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: sign up new user
      tags:
      - Auth
  /feed/post:
    post:
      consumes:
      - application/json
      description: Create a new post with an image and associate it with the authenticated
        user
      parameters:
      - description: Image file
        in: formData
        name: image
        required: true
        type: file
      - description: Title of the post
        in: formData
        name: title
        required: true
        type: string
      - description: Content of the post
        in: formData
        name: content
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Post created successfully
          schema:
            $ref: '#/definitions/feed.postSerializer'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create a new post
      tags:
      - Feed
  /feed/post/{postId}:
    delete:
      consumes:
      - application/json
      description: Deletes a specific post by its ID
      parameters:
      - description: Post ID
        in: path
        name: postId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Post deleted successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete a specific post
      tags:
      - Feed
    get:
      consumes:
      - application/json
      description: Fetches a specific post by its ID
      parameters:
      - description: Post ID
        in: path
        name: postId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Post fetched successfully
          schema:
            $ref: '#/definitions/feed.postSerializer'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get a specific post
      tags:
      - Feed
    put:
      consumes:
      - application/json
      description: Update the details of a specific post by its ID
      parameters:
      - description: Post ID
        in: path
        name: postId
        required: true
        type: string
      - description: Image file
        in: formData
        name: image
        required: true
        type: file
      - description: Title of the post
        in: formData
        name: title
        required: true
        type: string
      - description: Content of the post
        in: formData
        name: content
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Post updated successfully
          schema:
            $ref: '#/definitions/feed.postSerializer'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update a specific post
      tags:
      - Feed
  /feed/posts:
    get:
      consumes:
      - application/json
      description: Fetches all posts with pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of posts per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully fetched posts
          schema:
            $ref: '#/definitions/feed.allPostSerializer'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get all posts
      tags:
      - Feed
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
